# Generated by Django 5.1.5 on 2025-02-02 11:15

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('recorder', '0002_alter_audiorecording_options_and_more'),
    ]

    operations = [
        migrations.AddField(
            model_name='audiorecording',
            name='analysis_timestamp',
            field=models.DateTimeField(blank=True, help_text='When the audio analysis was performed', null=True),
        ),
        migrations.AddField(
            model_name='audiorecording',
            name='file_format',
            field=models.CharField(blank=True, help_text='Audio file format (e.g., wav, mp3)', max_length=10, null=True),
        ),
        migrations.AddField(
            model_name='audiorecording',
            name='file_size',
            field=models.IntegerField(blank=True, help_text='Size of audio file in bytes', null=True),
        ),
        migrations.AddField(
            model_name='audiorecording',
            name='is_analyzed',
            field=models.BooleanField(default=False, help_text='Whether the audio has been analyzed'),
        ),
        migrations.AddField(
            model_name='audiorecording',
            name='max_amplitude',
            field=models.FloatField(blank=True, help_text='Maximum amplitude peak', null=True),
        ),
        migrations.AddField(
            model_name='audiorecording',
            name='mean_amplitude',
            field=models.FloatField(blank=True, help_text='Average amplitude of the audio signal', null=True),
        ),
        migrations.AddField(
            model_name='audiorecording',
            name='mean_mfcc',
            field=models.FloatField(blank=True, help_text='Mean of Mel-frequency cepstral coefficients', null=True),
        ),
        migrations.AddField(
            model_name='audiorecording',
            name='mean_rms_energy',
            field=models.FloatField(blank=True, help_text='Root mean square energy of the signal', null=True),
        ),
        migrations.AddField(
            model_name='audiorecording',
            name='mean_spectral_centroid',
            field=models.FloatField(blank=True, help_text='Average frequency that centers the spectral energy', null=True),
        ),
        migrations.AddField(
            model_name='audiorecording',
            name='mean_spectral_rolloff',
            field=models.FloatField(blank=True, help_text='Frequency below which 85% of spectral energy is contained', null=True),
        ),
        migrations.AddField(
            model_name='audiorecording',
            name='mean_zero_crossing_rate',
            field=models.FloatField(blank=True, help_text='Rate of signal changes from positive to negative', null=True),
        ),
        migrations.AddField(
            model_name='audiorecording',
            name='min_amplitude',
            field=models.FloatField(blank=True, help_text='Minimum amplitude peak', null=True),
        ),
        migrations.AddField(
            model_name='audiorecording',
            name='tempo',
            field=models.FloatField(blank=True, help_text='Detected tempo in BPM', null=True),
        ),
        migrations.AlterField(
            model_name='audiorecording',
            name='clip_number',
            field=models.IntegerField(validators=[django.core.validators.MinValueValidator(1)]),
        ),
        migrations.AlterField(
            model_name='audiorecording',
            name='duration',
            field=models.FloatField(default=0.0, help_text='Duration in seconds', validators=[django.core.validators.MinValueValidator(0.0)]),
        ),
        migrations.AlterField(
            model_name='audiorecording',
            name='username',
            field=models.CharField(db_index=True, max_length=100),
        ),
        migrations.AlterUniqueTogether(
            name='audiorecording',
            unique_together={('username', 'clip_number')},
        ),
        migrations.AddIndex(
            model_name='audiorecording',
            index=models.Index(fields=['username', 'timestamp'], name='recorder_au_usernam_60e06d_idx'),
        ),
        migrations.AddIndex(
            model_name='audiorecording',
            index=models.Index(fields=['is_analyzed'], name='recorder_au_is_anal_833f3c_idx'),
        ),
    ]
